blueprint:
  name: To-Do List Manager
  author: smarthomeblack
  description: |
    # Tool for managing a Home Assistant to-do list with LLM integration
    
    ## Blueprint Setup
    
    ### Required
    * The Home Assistant todo integration must be installed and configured.
    
    ### Optional
    * Adjust the prompts for each field used in the script. The descriptions guide the LLM to provide the correct input.
    
    ### Note
    * Provide a concise and precise description for the script. This will be utilized by the LLM to understand it should use this script for managing to-do items.
    * Do not alter the default script name.
  domain: script
  homeassistant:
    min_version: 2024.10.0
  input:
    todo_settings:
      name: Settings for To-Do List
      icon: mdi:format-list-checkbox
      description: Configure the to-do list entity for actions.
      input:
        todo_entity:
          name: To-Do List Entity
          description: The entity_id of the to-do list (e.g. todo.personal_tasks)
          selector:
            entity:
              domain: todo
    prompt_settings:
      name: Prompt settings for the LLM
      icon: mdi:robot
      description: You can use these settings to finetune the prompts for your specific LLM (model). In most cases the defaults should be fine.
      collapsed: true
      input:
        action_type_prompt:
          name: Action Type Prompt
          description: The prompt for the LLM to select the action type.
          selector:
            text:
              multiline: true
          default: >-
            This argument is mandatory and must always be provided.
            Return exactly one of the following options: add, delete, get.
            Return only the word, without quotes or extra text.
            When submitting multiple items, make sure each one must be sent separately through a separate tool call.
        item_summary_prompt:
          name: Item Summary Prompt
          description: The prompt for the LLM to provide the item summary.
          selector:
            text:
              multiline: true
          default: >-
            This argument is required for add and delete actions.
            Provide a brief summary of the to-do item.
            No extra commentary, no markdown or emojis.
            Return only the summary text.
        item_description_prompt:
          name: Item Description Prompt
          description: The prompt for the LLM to provide the item description.
          selector:
            text:
              multiline: true
          default: >-
            This argument is optional (used only for add).
            Provide detailed information about the to-do item.
            No links, no markdown/emojis, no additional commentary.
            Return only the description text.
        due_date_prompt:
          name: Due Date Prompt
          description: The prompt for the LLM to provide the due date.
          selector:
            text:
              multiline: true
          default: >-
            This argument is optional (used only for add).
            Return the due date in YYYY-MM-DD format.
            If not provided, leave blank.
mode: queued
max: 30
max_exceeded: silent
variables:
  version: 20251011
fields:
  todo_entity:
    name: To-Do List Entity
    description: The entity_id of the to-do list (e.g. todo.personal_tasks)
    selector:
      entity:
        domain: todo
    required: true
  action_type:
    name: Action Type
    description: !input action_type_prompt
    selector:
      select:
        options:
          - add
          - delete
          - get
    required: true
  item_summary:
    name: Item Summary
    description: !input item_summary_prompt
    selector:
      text:
    required: false
  item_description:
    name: Item Description
    description: !input item_description_prompt
    selector:
      text:
    required: false
  due_date:
    name: Due Date
    description: !input due_date_prompt
    selector:
      text:
    required: false
sequence:
  - variables:
      todo_entity: "{{ todo_entity | default('') | trim }}"
      action_type: "{{ action_type | default('') | trim }}"
      item_summary: "{{ item_summary | default('') | trim }}"
      item_description: "{{ item_description | default('') | trim }}"
      due_date: "{{ due_date | default('') | trim }}"
  - alias: Check if variables were set correctly
    if:
      - condition: template
        value_template: >-
          {{
            (not todo_entity)
            or (action_type not in ['add', 'delete', 'get'])
            or (action_type in ['add', 'delete'] and not item_summary)
          }}
    then:
      - alias: Set variable for error message
        variables:
          response:
            error: >-
              Unable to process to-do list because one or more inputs are missing or invalid (todo_entity, action_type, item_summary).
      - alias: Stop the script
        stop: Unable to process to-do list due to invalid inputs.
        response_variable: response
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ action_type == 'add' }}"
        sequence:
          - service: todo.add_item
            target:
              entity_id: "{{ todo_entity }}"
            data:
              item: "{{ item_summary }}"
              description: "{{ item_description }}"
              due_date: "{{ due_date }}"
          - variables:
              response:
                status: "success"
                message: "Item added successfully"
          - stop: ""
            response_variable: response
      - conditions:
          - condition: template
            value_template: "{{ action_type == 'delete' }}"
        sequence:
          - service: todo.get_items
            target:
              entity_id: "{{ todo_entity }}"
            response_variable: todo_items
          - variables:
              item_uid: >-
                {% set found = todo_items[todo_entity]['items'] | selectattr('summary', 'equalto', item_summary) | list %}
                {% if found and found[0] %}{{ found[0]['uid'] }}{% else %}{{ '' }}{% endif %}
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ item_uid != '' }}"
                sequence:
                  - service: todo.update_item
                    target:
                      entity_id: "{{ todo_entity }}"
                    data:
                      item: "{{ item_uid }}"
                      status: completed
                  - variables:
                      response:
                        status: "success"
                        message: "Item deleted successfully"
                  - stop: ""
                    response_variable: response
              - conditions:
                  - condition: template
                    value_template: "{{ item_uid == '' }}"
                sequence:
                  - variables:
                      response:
                        status: "error"
                        message: "Item not found for deletion."
                  - stop: ""
                    response_variable: response
      - conditions:
          - condition: template
            value_template: "{{ action_type == 'get' }}"
        sequence:
          - service: todo.get_items
            target:
              entity_id: "{{ todo_entity }}"
            response_variable: todo_items
          - variables:
              response:
                items: "{{ todo_items[todo_entity]['items'] }}"
                status: "success"
                message: "Items fetched successfully"
          - stop: ""
            response_variable: response
