blueprint:
  name: Traffic Fine Notification
  description: >-
    # Nhận thông báo khi có thông tin phạt nguội

    * Dữ liệu được tra cứu trực tiếp từ Trang PhatNguoi.vn (https://phatnguoi.vn/).

    ## Yêu cầu

    * Cần cài đặt tích hợp Pyscript từ HACS.

    * Cần sao chép tập lệnh traffic_fine_lookup_tool.py vào thư mục pyscript.

    * Cần sao chép tập tin requirements.txt vào thư mục pyscript.

    ```

    #File configuration.yaml

    pyscript:
      allow_all_imports: true
      hass_is_global: true

    ```

    ## Hướng dẫn cài đặt

    ### Thêm Template Sensor cho từng xe theo mẫu bên dưới vào trong configuration.yaml của HA

    * Trong đó Sensor Time to Check để khai báo thời gian ngẫu nhiên thực hiện tra cứu, tối thiểu ngày 2 lần.

    * Sensor Biển Số sẽ lưu thông tin phạt nguội của xe.

    ```

    #File configuration.yaml

    template:
      - trigger:
          - trigger: time_pattern
            hours: /12
          - trigger: event
            event_type: event_template_reloaded
        sensor:
          - name: Time to Check 30G12345      # Biển số xe
            unique_id: time_to_check_30g12345     # Biển số xe
            icon: mdi:clock-digital
            device_class: timestamp
            state: "{{ (now() + timedelta(minutes=range(1,181) | random)).isoformat() }}"
      - trigger:
          - trigger: time
            at: sensor.time_to_check_30g12345     # Biển số xe
        action:
          - action: pyscript.traffic_fine_lookup_tool
            data:
              license_plate: 30G12345     # Biển số xe
              vehicle_type: "1"     # Kiểu phương tiện
            response_variable: response
        sensor:
          - name: 30G12345      # Biển số xe
            unique_id: 30g12345     # Biển số xe
            icon: mdi:car
            state: "{{ response.message if response.get('status') else response.get('error') }}"
            attributes:
              data: "{{ response }}"

    ```

    * Thay biển số bằng biển số xe của bạn, lưu ý phân biệt chữ hoa chữ thường.

    * vehicle_type:

      * "1": Ô tô

      * "2": Xe máy

      * "3": Xe máy điện

    * icon (tùy chọn):

      * "mdi:car": Ô tô

      * "mdi:motorbike": Xe máy

      * "mdi:motorbike-electric": Xe máy điện

    * Lưu lại cấu hình.

    * Developer Tools -> YAML -> Reload Template Entities.

    * Dữ liệu phạt nguội có thể không có luôn mà sẽ có sau khi đến thời gian tra cứu.

    ### Tạo script từ blueprint này

    * Chỉ định Biển Số của các xe mới được thêm từ bước trên, thêm được đồng thời nhiều xe.

    * Chỉ định các điện thoại sẽ nhận thông báo khi có thông tin phạt nguội.

    * Lưu lại script.

  domain: automation
  homeassistant:
    min_version: 2024.10.0
  input:
    vehicles:
      name: Vehicles
      description: List of vehicles to monitor.
      selector:
        entity:
          filter:
            - domain: sensor
              integration: template
          multiple: true
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications.
      selector:
        device:
          filter:
          - integration: mobile_app
          multiple: true

mode: queued
max_exceeded: silent

triggers:
  - trigger: state
    entity_id: !input vehicles

conditions:
  - condition: template
    value_template: "{{ trigger.from_state.state not in ['unavailable', 'unknown'] }}"
  - condition: template
    value_template: "{{ trigger.to_state.state not in ['unavailable', 'unknown'] }}"
  - condition: template
    value_template: "{{ not trigger.to_state.attributes.data.get('error') }}"

actions:
  - alias: Send a notification to each device
    repeat:
      for_each: !input notify_device
      sequence:
        - action: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
          data:
            title: Xe {{ trigger.to_state.attributes.friendly_name }}
            message: "{{ trigger.to_state.state }}"
            data:
              tag: "{{ 'tag_' ~ this.attributes.id }}"
